#!/bin/bash

# Pre-commit hook for Pixlie project
# This script runs the same checks as our CI pipeline

set -e

echo "Running pre-commit checks..."

# Check if we have any Rust files staged
RUST_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep '^pixlie/.*\.rs$' || true)
if [ -n "$RUST_FILES" ]; then
    echo "ü¶Ä Running Rust checks..."
    
    echo "  ‚Üí Checking Rust formatting..."
    cd pixlie
    if ! cargo fmt --all -- --check; then
        echo "‚ùå Rust formatting check failed!"
        echo "Please run: cd pixlie && cargo fmt --all"
        exit 1
    fi
    
    echo "  ‚Üí Running Rust clippy..."
    if ! cargo clippy --all-targets --all-features -- -D warnings; then
        echo "‚ùå Rust clippy check failed!"
        echo "Please fix clippy warnings before committing."
        exit 1
    fi
    
    echo "  ‚Üí Running Rust tests..."
    if ! cargo test; then
        echo "‚ùå Rust tests failed!"
        echo "Please fix failing tests before committing."
        exit 1
    fi
    
    cd ..
    echo "‚úÖ Rust checks passed!"
fi

# Check if we have any webapp files staged
WEBAPP_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep '^webapp/.*\.(ts|tsx|js|jsx)$' || true)
if [ -n "$WEBAPP_FILES" ]; then
    echo "‚öõÔ∏è  Running webapp checks..."
    
    cd webapp
    
    echo "  ‚Üí Installing dependencies..."
    if ! pnpm install --frozen-lockfile; then
        echo "‚ùå Failed to install webapp dependencies!"
        exit 1
    fi
    
    echo "  ‚Üí Running TypeScript type check..."
    if ! pnpm exec tsc -b --noEmit; then
        echo "‚ùå TypeScript type check failed!"
        echo "Please fix TypeScript errors before committing."
        exit 1
    fi
    
    echo "  ‚Üí Running ESLint..."
    if ! pnpm lint; then
        echo "‚ùå ESLint check failed!"
        echo "Please fix linting errors before committing."
        exit 1
    fi
    
    cd ..
    echo "‚úÖ Webapp checks passed!"
fi

echo "üéâ All pre-commit checks passed!"